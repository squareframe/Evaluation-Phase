{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "e1c9831b",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "\n",
    "# Send a GET request to the IMDb URL\n",
    "url = \"https://www.imdb.com/search/title/?genres=action&sort=user_rating,desc&title_type=feature&num_votes=25000,&pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=f11158cc-b50b-4c4d-b0a2-40b32863395b&pf_rd_r=XZ8X52H1R40B7KG5SNZ9&pf_rd_s=right-6&pf_rd_t=15506&pf_rd_i=top&ref_=chttp_gnr_1\"\n",
    "response = requests.get(url)\n",
    "\n",
    "# Create a BeautifulSoup object to parse the HTML content\n",
    "soup = BeautifulSoup(response.content, \"html.parser\")\n",
    "\n",
    "# Extract data for the first CSV file\n",
    "data_file1 = []\n",
    "movies = soup.find_all(\"div\", class_=\"lister-item mode-advanced\")\n",
    "for movie in movies:\n",
    "    movie_name_element = movie.find(\"h3\", class_=\"lister-item-header\").find(\"a\")\n",
    "    movie_name = movie_name_element.text.strip()\n",
    "    \n",
    "    director_element = movie.find_all(\"p\")[2].find_all(\"a\")\n",
    "    directors = [director.text.strip() for director in director_element]\n",
    "    \n",
    "    duration_element = movie.find(\"span\", class_=\"runtime\")\n",
    "    duration = duration_element.text.strip() if duration_element else \"\"\n",
    "    \n",
    "    year_element = movie.find(\"span\", class_=\"lister-item-year\")\n",
    "    year = year_element.text.strip()[1:-1] if year_element else \"\"\n",
    "    \n",
    "    ratings_element = movie.find(\"div\", class_=\"ratings-imdb-rating\")\n",
    "    ratings = ratings_element.text.strip() if ratings_element else \"\"\n",
    "    \n",
    "    metascore_element = movie.find(\"span\", class_=\"metascore\")\n",
    "    metascore = metascore_element.text.strip() if metascore_element else \"\"\n",
    "    \n",
    "    data_file1.append([movie_name, \", \".join(directors), duration, year, ratings, metascore])\n",
    "\n",
    "# Save data to the first CSV file\n",
    "df1 = pd.DataFrame(data_file1, columns=[\"Movie Name\", \"Directors\", \"Duration\", \"Year\", \"Ratings\", \"Metascore\"])\n",
    "df1[\"Sno\"] = df1.index + 1\n",
    "df1.to_csv(\"movies_data_1.csv\", index=False)\n",
    "\n",
    "# Extract data for the second CSV file\n",
    "data_file2 = []\n",
    "for movie in movies:\n",
    "    movie_name_element = movie.find(\"h3\", class_=\"lister-item-header\").find(\"a\")\n",
    "    movie_name = movie_name_element.text.strip()\n",
    "    \n",
    "    stars_element = movie.find(\"p\", class_=\"text-muted\").find(\"span\", class_=\"certificate\")\n",
    "    stars = stars_element.text.strip() if stars_element else \"\"\n",
    "    \n",
    "    votes_element = movie.find(\"p\", class_=\"sort-num_votes-visible\").find(\"span\", attrs={\"name\": \"nv\"})\n",
    "    votes = votes_element[\"data-value\"] if votes_element else \"\"\n",
    "    \n",
    "    genre_element = movie.find(\"p\", class_=\"text-muted\").find(\"span\", class_=\"genre\")\n",
    "    genre = genre_element.text.strip() if genre_element else \"\"\n",
    "    \n",
    "    gross_element = movie.find(\"p\", class_=\"sort-num_votes-visible\").find_all(\"span\", attrs={\"name\": \"nv\"})[-1]\n",
    "    gross = gross_element[\"data-value\"] if gross_element else \"\"\n",
    "    \n",
    "    popularity_element = movie.find(\"span\", class_=\"popularityTrend\")\n",
    "    popularity = popularity_element.text.strip() if popularity_element else \"\"\n",
    "    \n",
    "    certification_element = movie.find(\"p\", class_=\"text-muted\").find(\"span\", class_=\"certificate\")\n",
    "    certification = certification_element.text.strip() if certification_element else \"\"\n",
    "    \n",
    "    data_file2.append([movie_name, stars, votes, genre, gross, popularity, certification])\n",
    "\n",
    "# Save data to the second CSV file\n",
    "df2 = pd.DataFrame(data_file2, columns=[\"Movie Name\", \"Stars\", \"Votes\", \"Genre\", \"Gross Collection\", \"Popularity\", \"Certification\"])\n",
    "stars_columns = df2[\"Stars\"].str.split(\",\", expand=True).columns\n",
    "df2[stars_columns] = df2[\"Stars\"].str.split(\",\", expand=True)\n",
    "genre_columns = df2[\"Genre\"].str.split(\",\", expand=True).columns\n",
    "df2[genre_columns] = df2[\"Genre\"].str.split(\",\", expand=True)\n",
    "df2.drop([\"Stars\", \"Genre\"], axis=1, inplace=True)\n",
    "df2.to_csv(\"movies_data_2.csv\", index=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7b06e551",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 'Inception', 'Christopher Nolan', 148, 'Action, Adventure, Sci-Fi', 8.8)\n",
      "(2, 'The Dark Knight Rises', 'Christopher Nolan', 164, 'Action, Adventure', 8.4)\n",
      "(3, 'Dawn of the Planet of the Apes', 'Matt Reeves', 130, 'Action, Adventure, Drama, Sci-Fi', 7.6)\n",
      "(4, 'War for the Planet of the Apes', 'Matt Reeves', 140, 'Action, Adventure, Drama, Sci-Fi', 7.4)\n",
      "(5, 'Cloverfield', 'Matt Reeves', 85, 'Action, Horror, Sci-Fi, Thriller', 7.0)\n"
     ]
    }
   ],
   "source": [
    "import sqlite3\n",
    "\n",
    "# Connect to the SQLite database\n",
    "conn = sqlite3.connect('movies.db')\n",
    "cursor = conn.cursor()\n",
    "\n",
    "# Create the movies_data table\n",
    "create_table_query = '''\n",
    "CREATE TABLE IF NOT EXISTS movies_data (\n",
    "    Sno INTEGER PRIMARY KEY,\n",
    "    MovieName TEXT,\n",
    "    Director TEXT,\n",
    "    Duration INTEGER,\n",
    "    Genre TEXT,\n",
    "    Ratings REAL\n",
    ")\n",
    "'''\n",
    "cursor.execute(create_table_query)\n",
    "\n",
    "# Define the data to be inserted\n",
    "data = [\n",
    "    (1, 'Movie 1', 'Director 1', 120, 'Action', 7.5),\n",
    "    (2, 'Movie 2', 'Director 2', 110, 'Comedy', 8.2),\n",
    "    (3, 'Movie 3', 'Director 3', 105, 'Drama', 6.9),\n",
    "    (4, 'Movie 4', 'Director 4', 95, 'Thriller', 7.8),\n",
    "    (5, 'Movie 5', 'Director 5', 130, 'Action', 8.1),\n",
    "]\n",
    "\n",
    "# Insert the data into the movies_data table\n",
    "insert_query = '''\n",
    "INSERT OR IGNORE INTO movies_data (Sno, MovieName, Director, Duration, Genre, Ratings)\n",
    "VALUES (?, ?, ?, ?, ?, ?)\n",
    "'''\n",
    "cursor.executemany(insert_query, data)\n",
    "conn.commit()\n",
    "\n",
    "# Retrieve and display the data from the movies_data table\n",
    "select_query = '''\n",
    "SELECT * FROM movies_data\n",
    "'''\n",
    "cursor.execute(select_query)\n",
    "result = cursor.fetchall()\n",
    "for row in result:\n",
    "    print(row)\n",
    "\n",
    "# Close the cursor and connection\n",
    "cursor.close()\n",
    "conn.close()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "41de69d2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Query 1:\n",
      "                                           Movie Name  \\\n",
      "0                 Spider-Man: Across the Spider-Verse   \n",
      "1                                     The Dark Knight   \n",
      "2       The Lord of the Rings: The Return of the King   \n",
      "3                                           Inception   \n",
      "4   The Lord of the Rings: The Fellowship of the Ring   \n",
      "5               The Lord of the Rings: The Two Towers   \n",
      "6                                          The Matrix   \n",
      "7      Star Wars: Episode V - The Empire Strikes Back   \n",
      "8                                     Soorarai Pottru   \n",
      "9                                           Star Wars   \n",
      "10                         Terminator 2: Judgment Day   \n",
      "11                               Shichinin no samurai   \n",
      "12                                            Seppuku   \n",
      "13                                         Sita Ramam   \n",
      "14                                               LÃ©on   \n",
      "15                                          Gladiator   \n",
      "16                  Spider-Man: Into the Spider-Verse   \n",
      "17                            Raiders of the Lost Ark   \n",
      "18                                  Avengers: Endgame   \n",
      "19                             Avengers: Infinity War   \n",
      "20                                           Oldeuboi   \n",
      "21                              The Dark Knight Rises   \n",
      "22                                             Aliens   \n",
      "23                                             Kaithi   \n",
      "24                                             Asuran   \n",
      "25                                  Top Gun: Maverick   \n",
      "26                                               Heat   \n",
      "27                                 North by Northwest   \n",
      "28         Star Wars: Episode VI - Return of the Jedi   \n",
      "29                                      Mononoke-hime   \n",
      "30                                            Kantara   \n",
      "31                                             Dangal   \n",
      "32                                           Ratsasan   \n",
      "33                                   K.G.F: Chapter 2   \n",
      "34                                             Vikram   \n",
      "35                                          Shershaah   \n",
      "36                     Guardians of the Galaxy Vol. 3   \n",
      "37                            Spider-Man: No Way Home   \n",
      "38                                      Jurassic Park   \n",
      "39                 Indiana Jones and the Last Crusade   \n",
      "40                                               1917   \n",
      "41                                      Batman Begins   \n",
      "42                                  Kill Bill: Vol. 1   \n",
      "43                                           Die Hard   \n",
      "44                                     V for Vendetta   \n",
      "45                 Kimetsu no Yaiba: Mugen Ressha-Hen   \n",
      "46                                                Ran   \n",
      "47                                 Gangs of Wasseypur   \n",
      "48                                       Vikram Vedha   \n",
      "49                                            YÃ´jinbÃ´   \n",
      "\n",
      "                                            Directors Duration  Year  Ratings  \\\n",
      "0   Joaquim Dos Santos, Kemp Powers, Justin K. Tho...  140 min  2023      9.0   \n",
      "1   Christopher Nolan, Christian Bale, Heath Ledge...  152 min  2008      9.0   \n",
      "2   Peter Jackson, Elijah Wood, Viggo Mortensen, I...  201 min  2003      9.0   \n",
      "3   Christopher Nolan, Leonardo DiCaprio, Joseph G...  148 min  2010      8.8   \n",
      "4   Peter Jackson, Elijah Wood, Ian McKellen, Orla...  178 min  2001      8.8   \n",
      "5   Peter Jackson, Elijah Wood, Ian McKellen, Vigg...  179 min  2002      8.8   \n",
      "6   Lana Wachowski, Lilly Wachowski, Keanu Reeves,...  136 min  1999      8.7   \n",
      "7   Irvin Kershner, Mark Hamill, Harrison Ford, Ca...  124 min  1980      8.7   \n",
      "8   Sudha Kongara, Suriya, Paresh Rawal, Urvashi, ...  153 min  2020      8.7   \n",
      "9   George Lucas, Mark Hamill, Harrison Ford, Carr...  121 min  1977      8.6   \n",
      "10  James Cameron, Arnold Schwarzenegger, Linda Ha...  137 min  1991      8.6   \n",
      "11  Akira Kurosawa, ToshirÃ´ Mifune, Takashi Shimur...  207 min  1954      8.6   \n",
      "12  Masaki Kobayashi, Tatsuya Nakadai, Akira Ishih...  133 min  1962      8.6   \n",
      "13  Hanu Raghavapudi, Dulquer Salmaan, Mrunal Thak...  163 min  2022      8.6   \n",
      "14  Luc Besson, Jean Reno, Gary Oldman, Natalie Po...  110 min  1994      8.5   \n",
      "15  Ridley Scott, Russell Crowe, Joaquin Phoenix, ...  155 min  2000      8.5   \n",
      "16  Bob Persichetti, Peter Ramsey, Rodney Rothman,...  117 min  2018      8.4   \n",
      "17  Steven Spielberg, Harrison Ford, Karen Allen, ...  115 min  1981      8.4   \n",
      "18  Anthony Russo, Joe Russo, Robert Downey Jr., C...  181 min  2019      8.4   \n",
      "19  Anthony Russo, Joe Russo, Robert Downey Jr., C...  149 min  2018      8.4   \n",
      "20  Park Chan-wook, Choi Min-sik, Yoo Ji-tae, Kang...  101 min  2003      8.4   \n",
      "21  Christopher Nolan, Christian Bale, Tom Hardy, ...  164 min  2012      8.4   \n",
      "22  James Cameron, Sigourney Weaver, Michael Biehn...  137 min  1986      8.4   \n",
      "23  Lokesh Kanagaraj, Karthi, Narain, Arjun Das, G...  145 min  2019      8.4   \n",
      "24  Vetrimaaran, Dhanush, Manju Warrier, Prakash R...  141 min  2019      8.4   \n",
      "25  Joseph Kosinski, Tom Cruise, Jennifer Connelly...  130 min  2022      8.3   \n",
      "26  Michael Mann, Al Pacino, Robert De Niro, Val K...  170 min  1995      8.3   \n",
      "27  Alfred Hitchcock, Cary Grant, Eva Marie Saint,...  136 min  1959      8.3   \n",
      "28  Richard Marquand, Mark Hamill, Harrison Ford, ...  131 min  1983      8.3   \n",
      "29  Hayao Miyazaki, YÃ´ji Matsuda, Yuriko Ishida, Y...  134 min  1997      8.3   \n",
      "30  Rishab Shetty, Rishab Shetty, Kishore Kumar G....  148 min  2022      8.3   \n",
      "31  Nitesh Tiwari, Aamir Khan, Sakshi Tanwar, Fati...  161 min  2016      8.3   \n",
      "32  Ram Kumar, Vishnu Vishal, Amala Paul, Radha Ra...  170 min  2018      8.3   \n",
      "33  Prashanth Neel, Yash, Sanjay Dutt, Raveena Tan...  168 min  2022      8.3   \n",
      "34  Lokesh Kanagaraj, Kamal Haasan, Vijay Sethupat...  175 min  2022      8.3   \n",
      "35  Vishnuvardhan, Sidharth Malhotra, Kiara Advani...  135 min  2021      8.3   \n",
      "36  James Gunn, Chris Pratt, Chukwudi Iwuji, Bradl...  150 min  2023      8.2   \n",
      "37  Jon Watts, Tom Holland, Zendaya, Benedict Cumb...  148 min  2021      8.2   \n",
      "38  Steven Spielberg, Sam Neill, Laura Dern, Jeff ...  127 min  1993      8.2   \n",
      "39  Steven Spielberg, Harrison Ford, Sean Connery,...  127 min  1989      8.2   \n",
      "40  Sam Mendes, Dean-Charles Chapman, George MacKa...  119 min  2019      8.2   \n",
      "41  Christopher Nolan, Christian Bale, Michael Cai...  140 min  2005      8.2   \n",
      "42  Quentin Tarantino, Uma Thurman, David Carradin...  111 min  2003      8.2   \n",
      "43  John McTiernan, Bruce Willis, Alan Rickman, Bo...  132 min  1988      8.2   \n",
      "44  James McTeigue, Hugo Weaving, Natalie Portman,...  132 min  2005      8.2   \n",
      "45  Haruo Sotozaki, Natsuki Hanae, Akari KitÃ´, Yos...  117 min  2020      8.2   \n",
      "46  Akira Kurosawa, Tatsuya Nakadai, Akira Terao, ...  162 min  1985      8.2   \n",
      "47  Anurag Kashyap, Manoj Bajpayee, Nawazuddin Sid...  321 min  2012      8.2   \n",
      "48  Gayatri, Pushkar, Gowtham Selvaraj, Madhavan, ...  147 min  2017      8.2   \n",
      "49  Akira Kurosawa, ToshirÃ´ Mifune, EijirÃ´ TÃ´no, T...  110 min  1961      8.2   \n",
      "\n",
      "    Metascore  Sno  \n",
      "0        86.0    1  \n",
      "1        84.0    2  \n",
      "2        94.0    3  \n",
      "3        74.0    4  \n",
      "4        92.0    5  \n",
      "5        87.0    6  \n",
      "6        73.0    7  \n",
      "7        82.0    8  \n",
      "8         NaN    9  \n",
      "9        90.0   10  \n",
      "10       75.0   11  \n",
      "11       98.0   12  \n",
      "12       85.0   13  \n",
      "13        NaN   14  \n",
      "14       64.0   15  \n",
      "15       67.0   16  \n",
      "16       87.0   17  \n",
      "17       85.0   18  \n",
      "18       78.0   19  \n",
      "19       68.0   20  \n",
      "20       77.0   21  \n",
      "21       78.0   22  \n",
      "22       84.0   23  \n",
      "23        NaN   24  \n",
      "24        NaN   25  \n",
      "25       78.0   26  \n",
      "26       76.0   27  \n",
      "27       98.0   28  \n",
      "28       58.0   29  \n",
      "29       76.0   30  \n",
      "30        NaN   31  \n",
      "31        NaN   32  \n",
      "32        NaN   33  \n",
      "33        NaN   34  \n",
      "34        NaN   35  \n",
      "35        NaN   36  \n",
      "36       64.0   37  \n",
      "37       71.0   38  \n",
      "38       68.0   39  \n",
      "39       65.0   40  \n",
      "40       78.0   41  \n",
      "41       70.0   42  \n",
      "42       69.0   43  \n",
      "43       72.0   44  \n",
      "44       62.0   45  \n",
      "45       72.0   46  \n",
      "46       97.0   47  \n",
      "47       89.0   48  \n",
      "48        NaN   49  \n",
      "49       93.0   50  \n",
      "Query 2:\n",
      "                                           Movie Name  \\\n",
      "0                                     The Dark Knight   \n",
      "1       The Lord of the Rings: The Return of the King   \n",
      "2                                           Inception   \n",
      "3   The Lord of the Rings: The Fellowship of the Ring   \n",
      "4               The Lord of the Rings: The Two Towers   \n",
      "5                                          The Matrix   \n",
      "6      Star Wars: Episode V - The Empire Strikes Back   \n",
      "7                                     Soorarai Pottru   \n",
      "8                                           Star Wars   \n",
      "9                          Terminator 2: Judgment Day   \n",
      "10                               Shichinin no samurai   \n",
      "11                                            Seppuku   \n",
      "12                                         Sita Ramam   \n",
      "13                                               LÃ©on   \n",
      "14                                          Gladiator   \n",
      "15                            Raiders of the Lost Ark   \n",
      "16                                  Avengers: Endgame   \n",
      "17                             Avengers: Infinity War   \n",
      "18                                           Oldeuboi   \n",
      "19                              The Dark Knight Rises   \n",
      "20                                             Aliens   \n",
      "21                                             Kaithi   \n",
      "22                                             Asuran   \n",
      "23                                  Top Gun: Maverick   \n",
      "24                                               Heat   \n",
      "25                                 North by Northwest   \n",
      "26         Star Wars: Episode VI - Return of the Jedi   \n",
      "27                                            Kantara   \n",
      "28                                             Dangal   \n",
      "29                                           Ratsasan   \n",
      "30                                   K.G.F: Chapter 2   \n",
      "31                                             Vikram   \n",
      "32                                          Shershaah   \n",
      "33                     Guardians of the Galaxy Vol. 3   \n",
      "34                            Spider-Man: No Way Home   \n",
      "35                                      Jurassic Park   \n",
      "36                 Indiana Jones and the Last Crusade   \n",
      "37                                               1917   \n",
      "38                                      Batman Begins   \n",
      "39                                  Kill Bill: Vol. 1   \n",
      "40                                           Die Hard   \n",
      "41                                     V for Vendetta   \n",
      "42                                                Ran   \n",
      "43                                 Gangs of Wasseypur   \n",
      "44                                       Vikram Vedha   \n",
      "45                                            YÃ´jinbÃ´   \n",
      "\n",
      "                                            Directors  Ratings  \\\n",
      "0   Christopher Nolan, Christian Bale, Heath Ledge...      9.0   \n",
      "1   Peter Jackson, Elijah Wood, Viggo Mortensen, I...      9.0   \n",
      "2   Christopher Nolan, Leonardo DiCaprio, Joseph G...      8.8   \n",
      "3   Peter Jackson, Elijah Wood, Ian McKellen, Orla...      8.8   \n",
      "4   Peter Jackson, Elijah Wood, Ian McKellen, Vigg...      8.8   \n",
      "5   Lana Wachowski, Lilly Wachowski, Keanu Reeves,...      8.7   \n",
      "6   Irvin Kershner, Mark Hamill, Harrison Ford, Ca...      8.7   \n",
      "7   Sudha Kongara, Suriya, Paresh Rawal, Urvashi, ...      8.7   \n",
      "8   George Lucas, Mark Hamill, Harrison Ford, Carr...      8.6   \n",
      "9   James Cameron, Arnold Schwarzenegger, Linda Ha...      8.6   \n",
      "10  Akira Kurosawa, ToshirÃ´ Mifune, Takashi Shimur...      8.6   \n",
      "11  Masaki Kobayashi, Tatsuya Nakadai, Akira Ishih...      8.6   \n",
      "12  Hanu Raghavapudi, Dulquer Salmaan, Mrunal Thak...      8.6   \n",
      "13  Luc Besson, Jean Reno, Gary Oldman, Natalie Po...      8.5   \n",
      "14  Ridley Scott, Russell Crowe, Joaquin Phoenix, ...      8.5   \n",
      "15  Steven Spielberg, Harrison Ford, Karen Allen, ...      8.4   \n",
      "16  Anthony Russo, Joe Russo, Robert Downey Jr., C...      8.4   \n",
      "17  Anthony Russo, Joe Russo, Robert Downey Jr., C...      8.4   \n",
      "18  Park Chan-wook, Choi Min-sik, Yoo Ji-tae, Kang...      8.4   \n",
      "19  Christopher Nolan, Christian Bale, Tom Hardy, ...      8.4   \n",
      "20  James Cameron, Sigourney Weaver, Michael Biehn...      8.4   \n",
      "21  Lokesh Kanagaraj, Karthi, Narain, Arjun Das, G...      8.4   \n",
      "22  Vetrimaaran, Dhanush, Manju Warrier, Prakash R...      8.4   \n",
      "23  Joseph Kosinski, Tom Cruise, Jennifer Connelly...      8.3   \n",
      "24  Michael Mann, Al Pacino, Robert De Niro, Val K...      8.3   \n",
      "25  Alfred Hitchcock, Cary Grant, Eva Marie Saint,...      8.3   \n",
      "26  Richard Marquand, Mark Hamill, Harrison Ford, ...      8.3   \n",
      "27  Rishab Shetty, Rishab Shetty, Kishore Kumar G....      8.3   \n",
      "28  Nitesh Tiwari, Aamir Khan, Sakshi Tanwar, Fati...      8.3   \n",
      "29  Ram Kumar, Vishnu Vishal, Amala Paul, Radha Ra...      8.3   \n",
      "30  Prashanth Neel, Yash, Sanjay Dutt, Raveena Tan...      8.3   \n",
      "31  Lokesh Kanagaraj, Kamal Haasan, Vijay Sethupat...      8.3   \n",
      "32  Vishnuvardhan, Sidharth Malhotra, Kiara Advani...      8.3   \n",
      "33  James Gunn, Chris Pratt, Chukwudi Iwuji, Bradl...      8.2   \n",
      "34  Jon Watts, Tom Holland, Zendaya, Benedict Cumb...      8.2   \n",
      "35  Steven Spielberg, Sam Neill, Laura Dern, Jeff ...      8.2   \n",
      "36  Steven Spielberg, Harrison Ford, Sean Connery,...      8.2   \n",
      "37  Sam Mendes, Dean-Charles Chapman, George MacKa...      8.2   \n",
      "38  Christopher Nolan, Christian Bale, Michael Cai...      8.2   \n",
      "39  Quentin Tarantino, Uma Thurman, David Carradin...      8.2   \n",
      "40  John McTiernan, Bruce Willis, Alan Rickman, Bo...      8.2   \n",
      "41  James McTeigue, Hugo Weaving, Natalie Portman,...      8.2   \n",
      "42  Akira Kurosawa, Tatsuya Nakadai, Akira Terao, ...      8.2   \n",
      "43  Anurag Kashyap, Manoj Bajpayee, Nawazuddin Sid...      8.2   \n",
      "44  Gayatri, Pushkar, Gowtham Selvaraj, Madhavan, ...      8.2   \n",
      "45  Akira Kurosawa, ToshirÃ´ Mifune, EijirÃ´ TÃ´no, T...      8.2   \n",
      "\n",
      "   Gross Collection  \n",
      "0      53,48,58,444  \n",
      "1      37,78,45,905  \n",
      "2      29,25,76,195  \n",
      "3      31,55,44,750  \n",
      "4      34,25,51,365  \n",
      "5      17,14,79,930  \n",
      "6      29,04,75,067  \n",
      "7            119590  \n",
      "8      32,27,40,140  \n",
      "9      20,48,43,350  \n",
      "10         2,69,061  \n",
      "11            61170  \n",
      "12            60242  \n",
      "13      1,95,01,238  \n",
      "14     18,77,05,427  \n",
      "15     24,81,59,971  \n",
      "16     85,83,73,000  \n",
      "17     67,88,15,482  \n",
      "18         7,07,481  \n",
      "19     44,81,39,099  \n",
      "20      8,51,60,248  \n",
      "21            36225  \n",
      "22            31245  \n",
      "23     71,87,32,821  \n",
      "24      6,74,36,818  \n",
      "25      1,32,75,000  \n",
      "26     30,91,25,409  \n",
      "27            95685  \n",
      "28      1,23,91,761  \n",
      "29            47024  \n",
      "30        66,04,562  \n",
      "31            64001  \n",
      "32           124906  \n",
      "33           164652  \n",
      "34     80,47,47,988  \n",
      "35     40,24,53,882  \n",
      "36     19,71,71,806  \n",
      "37     15,92,27,644  \n",
      "38     20,68,52,432  \n",
      "39      7,00,99,045  \n",
      "40      8,30,08,852  \n",
      "41      7,05,11,035  \n",
      "42        41,35,750  \n",
      "43            99454  \n",
      "44            47775  \n",
      "45           126013  \n",
      "Query 3:\n",
      "                                            Directors\n",
      "0   Joaquim Dos Santos, Kemp Powers, Justin K. Tho...\n",
      "1   Christopher Nolan, Christian Bale, Heath Ledge...\n",
      "2   Peter Jackson, Elijah Wood, Viggo Mortensen, I...\n",
      "3   Christopher Nolan, Leonardo DiCaprio, Joseph G...\n",
      "4   Peter Jackson, Elijah Wood, Ian McKellen, Orla...\n",
      "5   Peter Jackson, Elijah Wood, Ian McKellen, Vigg...\n",
      "6   Lana Wachowski, Lilly Wachowski, Keanu Reeves,...\n",
      "7   Irvin Kershner, Mark Hamill, Harrison Ford, Ca...\n",
      "8   Sudha Kongara, Suriya, Paresh Rawal, Urvashi, ...\n",
      "9   George Lucas, Mark Hamill, Harrison Ford, Carr...\n",
      "10  James Cameron, Arnold Schwarzenegger, Linda Ha...\n",
      "11  Akira Kurosawa, ToshirÃ´ Mifune, Takashi Shimur...\n",
      "12  Masaki Kobayashi, Tatsuya Nakadai, Akira Ishih...\n",
      "13  Hanu Raghavapudi, Dulquer Salmaan, Mrunal Thak...\n",
      "14  Luc Besson, Jean Reno, Gary Oldman, Natalie Po...\n",
      "15  Ridley Scott, Russell Crowe, Joaquin Phoenix, ...\n",
      "16  Bob Persichetti, Peter Ramsey, Rodney Rothman,...\n",
      "17  Steven Spielberg, Harrison Ford, Karen Allen, ...\n",
      "18  Anthony Russo, Joe Russo, Robert Downey Jr., C...\n",
      "19  Anthony Russo, Joe Russo, Robert Downey Jr., C...\n",
      "20  Park Chan-wook, Choi Min-sik, Yoo Ji-tae, Kang...\n",
      "21  Christopher Nolan, Christian Bale, Tom Hardy, ...\n",
      "22  James Cameron, Sigourney Weaver, Michael Biehn...\n",
      "23  Lokesh Kanagaraj, Karthi, Narain, Arjun Das, G...\n",
      "24  Vetrimaaran, Dhanush, Manju Warrier, Prakash R...\n",
      "25  Joseph Kosinski, Tom Cruise, Jennifer Connelly...\n",
      "26  Michael Mann, Al Pacino, Robert De Niro, Val K...\n",
      "27  Alfred Hitchcock, Cary Grant, Eva Marie Saint,...\n",
      "28  Richard Marquand, Mark Hamill, Harrison Ford, ...\n",
      "29  Hayao Miyazaki, YÃ´ji Matsuda, Yuriko Ishida, Y...\n",
      "30  Rishab Shetty, Rishab Shetty, Kishore Kumar G....\n",
      "31  Nitesh Tiwari, Aamir Khan, Sakshi Tanwar, Fati...\n",
      "32  Ram Kumar, Vishnu Vishal, Amala Paul, Radha Ra...\n",
      "33  Prashanth Neel, Yash, Sanjay Dutt, Raveena Tan...\n",
      "34  Lokesh Kanagaraj, Kamal Haasan, Vijay Sethupat...\n",
      "35  Vishnuvardhan, Sidharth Malhotra, Kiara Advani...\n",
      "36  James Gunn, Chris Pratt, Chukwudi Iwuji, Bradl...\n",
      "37  Jon Watts, Tom Holland, Zendaya, Benedict Cumb...\n",
      "38  Steven Spielberg, Sam Neill, Laura Dern, Jeff ...\n",
      "39  Steven Spielberg, Harrison Ford, Sean Connery,...\n",
      "40  Sam Mendes, Dean-Charles Chapman, George MacKa...\n",
      "41  Christopher Nolan, Christian Bale, Michael Cai...\n",
      "42  Quentin Tarantino, Uma Thurman, David Carradin...\n",
      "43  John McTiernan, Bruce Willis, Alan Rickman, Bo...\n",
      "44  James McTeigue, Hugo Weaving, Natalie Portman,...\n",
      "45  Haruo Sotozaki, Natsuki Hanae, Akari KitÃ´, Yos...\n",
      "46  Akira Kurosawa, Tatsuya Nakadai, Akira Terao, ...\n",
      "47  Anurag Kashyap, Manoj Bajpayee, Nawazuddin Sid...\n",
      "48  Gayatri, Pushkar, Gowtham Selvaraj, Madhavan, ...\n",
      "49  Akira Kurosawa, ToshirÃ´ Mifune, EijirÃ´ TÃ´no, T...\n",
      "Query 4:\n",
      "                                           Movie Name  \\\n",
      "0                 Spider-Man: Across the Spider-Verse   \n",
      "1                                     The Dark Knight   \n",
      "2       The Lord of the Rings: The Return of the King   \n",
      "3                                           Inception   \n",
      "4   The Lord of the Rings: The Fellowship of the Ring   \n",
      "5               The Lord of the Rings: The Two Towers   \n",
      "6                                          The Matrix   \n",
      "7      Star Wars: Episode V - The Empire Strikes Back   \n",
      "8                                     Soorarai Pottru   \n",
      "9                                           Star Wars   \n",
      "10                         Terminator 2: Judgment Day   \n",
      "11                               Shichinin no samurai   \n",
      "12                                            Seppuku   \n",
      "13                                         Sita Ramam   \n",
      "14                                               LÃ©on   \n",
      "15                                          Gladiator   \n",
      "16                  Spider-Man: Into the Spider-Verse   \n",
      "17                            Raiders of the Lost Ark   \n",
      "18                                  Avengers: Endgame   \n",
      "19                             Avengers: Infinity War   \n",
      "20                                           Oldeuboi   \n",
      "21                              The Dark Knight Rises   \n",
      "22                                             Aliens   \n",
      "23                                             Kaithi   \n",
      "24                                             Asuran   \n",
      "25                                  Top Gun: Maverick   \n",
      "26                                               Heat   \n",
      "27                                 North by Northwest   \n",
      "28         Star Wars: Episode VI - Return of the Jedi   \n",
      "29                                      Mononoke-hime   \n",
      "30                                            Kantara   \n",
      "31                                             Dangal   \n",
      "32                                           Ratsasan   \n",
      "33                                   K.G.F: Chapter 2   \n",
      "34                                             Vikram   \n",
      "35                                          Shershaah   \n",
      "36                     Guardians of the Galaxy Vol. 3   \n",
      "37                            Spider-Man: No Way Home   \n",
      "38                                      Jurassic Park   \n",
      "39                 Indiana Jones and the Last Crusade   \n",
      "40                                               1917   \n",
      "41                                      Batman Begins   \n",
      "42                                  Kill Bill: Vol. 1   \n",
      "43                                           Die Hard   \n",
      "44                                     V for Vendetta   \n",
      "45                 Kimetsu no Yaiba: Mugen Ressha-Hen   \n",
      "46                                                Ran   \n",
      "47                                 Gangs of Wasseypur   \n",
      "48                                       Vikram Vedha   \n",
      "49                                            YÃ´jinbÃ´   \n",
      "\n",
      "                                            Directors Duration  Year  Ratings  \\\n",
      "0   Joaquim Dos Santos, Kemp Powers, Justin K. Tho...  140 min  2023      9.0   \n",
      "1   Christopher Nolan, Christian Bale, Heath Ledge...  152 min  2008      9.0   \n",
      "2   Peter Jackson, Elijah Wood, Viggo Mortensen, I...  201 min  2003      9.0   \n",
      "3   Christopher Nolan, Leonardo DiCaprio, Joseph G...  148 min  2010      8.8   \n",
      "4   Peter Jackson, Elijah Wood, Ian McKellen, Orla...  178 min  2001      8.8   \n",
      "5   Peter Jackson, Elijah Wood, Ian McKellen, Vigg...  179 min  2002      8.8   \n",
      "6   Lana Wachowski, Lilly Wachowski, Keanu Reeves,...  136 min  1999      8.7   \n",
      "7   Irvin Kershner, Mark Hamill, Harrison Ford, Ca...  124 min  1980      8.7   \n",
      "8   Sudha Kongara, Suriya, Paresh Rawal, Urvashi, ...  153 min  2020      8.7   \n",
      "9   George Lucas, Mark Hamill, Harrison Ford, Carr...  121 min  1977      8.6   \n",
      "10  James Cameron, Arnold Schwarzenegger, Linda Ha...  137 min  1991      8.6   \n",
      "11  Akira Kurosawa, ToshirÃ´ Mifune, Takashi Shimur...  207 min  1954      8.6   \n",
      "12  Masaki Kobayashi, Tatsuya Nakadai, Akira Ishih...  133 min  1962      8.6   \n",
      "13  Hanu Raghavapudi, Dulquer Salmaan, Mrunal Thak...  163 min  2022      8.6   \n",
      "14  Luc Besson, Jean Reno, Gary Oldman, Natalie Po...  110 min  1994      8.5   \n",
      "15  Ridley Scott, Russell Crowe, Joaquin Phoenix, ...  155 min  2000      8.5   \n",
      "16  Bob Persichetti, Peter Ramsey, Rodney Rothman,...  117 min  2018      8.4   \n",
      "17  Steven Spielberg, Harrison Ford, Karen Allen, ...  115 min  1981      8.4   \n",
      "18  Anthony Russo, Joe Russo, Robert Downey Jr., C...  181 min  2019      8.4   \n",
      "19  Anthony Russo, Joe Russo, Robert Downey Jr., C...  149 min  2018      8.4   \n",
      "20  Park Chan-wook, Choi Min-sik, Yoo Ji-tae, Kang...  101 min  2003      8.4   \n",
      "21  Christopher Nolan, Christian Bale, Tom Hardy, ...  164 min  2012      8.4   \n",
      "22  James Cameron, Sigourney Weaver, Michael Biehn...  137 min  1986      8.4   \n",
      "23  Lokesh Kanagaraj, Karthi, Narain, Arjun Das, G...  145 min  2019      8.4   \n",
      "24  Vetrimaaran, Dhanush, Manju Warrier, Prakash R...  141 min  2019      8.4   \n",
      "25  Joseph Kosinski, Tom Cruise, Jennifer Connelly...  130 min  2022      8.3   \n",
      "26  Michael Mann, Al Pacino, Robert De Niro, Val K...  170 min  1995      8.3   \n",
      "27  Alfred Hitchcock, Cary Grant, Eva Marie Saint,...  136 min  1959      8.3   \n",
      "28  Richard Marquand, Mark Hamill, Harrison Ford, ...  131 min  1983      8.3   \n",
      "29  Hayao Miyazaki, YÃ´ji Matsuda, Yuriko Ishida, Y...  134 min  1997      8.3   \n",
      "30  Rishab Shetty, Rishab Shetty, Kishore Kumar G....  148 min  2022      8.3   \n",
      "31  Nitesh Tiwari, Aamir Khan, Sakshi Tanwar, Fati...  161 min  2016      8.3   \n",
      "32  Ram Kumar, Vishnu Vishal, Amala Paul, Radha Ra...  170 min  2018      8.3   \n",
      "33  Prashanth Neel, Yash, Sanjay Dutt, Raveena Tan...  168 min  2022      8.3   \n",
      "34  Lokesh Kanagaraj, Kamal Haasan, Vijay Sethupat...  175 min  2022      8.3   \n",
      "35  Vishnuvardhan, Sidharth Malhotra, Kiara Advani...  135 min  2021      8.3   \n",
      "36  James Gunn, Chris Pratt, Chukwudi Iwuji, Bradl...  150 min  2023      8.2   \n",
      "37  Jon Watts, Tom Holland, Zendaya, Benedict Cumb...  148 min  2021      8.2   \n",
      "38  Steven Spielberg, Sam Neill, Laura Dern, Jeff ...  127 min  1993      8.2   \n",
      "39  Steven Spielberg, Harrison Ford, Sean Connery,...  127 min  1989      8.2   \n",
      "40  Sam Mendes, Dean-Charles Chapman, George MacKa...  119 min  2019      8.2   \n",
      "41  Christopher Nolan, Christian Bale, Michael Cai...  140 min  2005      8.2   \n",
      "42  Quentin Tarantino, Uma Thurman, David Carradin...  111 min  2003      8.2   \n",
      "43  John McTiernan, Bruce Willis, Alan Rickman, Bo...  132 min  1988      8.2   \n",
      "44  James McTeigue, Hugo Weaving, Natalie Portman,...  132 min  2005      8.2   \n",
      "45  Haruo Sotozaki, Natsuki Hanae, Akari KitÃ´, Yos...  117 min  2020      8.2   \n",
      "46  Akira Kurosawa, Tatsuya Nakadai, Akira Terao, ...  162 min  1985      8.2   \n",
      "47  Anurag Kashyap, Manoj Bajpayee, Nawazuddin Sid...  321 min  2012      8.2   \n",
      "48  Gayatri, Pushkar, Gowtham Selvaraj, Madhavan, ...  147 min  2017      8.2   \n",
      "49  Akira Kurosawa, ToshirÃ´ Mifune, EijirÃ´ TÃ´no, T...  110 min  1961      8.2   \n",
      "\n",
      "    Metascore  Sno  \n",
      "0        86.0    1  \n",
      "1        84.0    2  \n",
      "2        94.0    3  \n",
      "3        74.0    4  \n",
      "4        92.0    5  \n",
      "5        87.0    6  \n",
      "6        73.0    7  \n",
      "7        82.0    8  \n",
      "8         NaN    9  \n",
      "9        90.0   10  \n",
      "10       75.0   11  \n",
      "11       98.0   12  \n",
      "12       85.0   13  \n",
      "13        NaN   14  \n",
      "14       64.0   15  \n",
      "15       67.0   16  \n",
      "16       87.0   17  \n",
      "17       85.0   18  \n",
      "18       78.0   19  \n",
      "19       68.0   20  \n",
      "20       77.0   21  \n",
      "21       78.0   22  \n",
      "22       84.0   23  \n",
      "23        NaN   24  \n",
      "24        NaN   25  \n",
      "25       78.0   26  \n",
      "26       76.0   27  \n",
      "27       98.0   28  \n",
      "28       58.0   29  \n",
      "29       76.0   30  \n",
      "30        NaN   31  \n",
      "31        NaN   32  \n",
      "32        NaN   33  \n",
      "33        NaN   34  \n",
      "34        NaN   35  \n",
      "35        NaN   36  \n",
      "36       64.0   37  \n",
      "37       71.0   38  \n",
      "38       68.0   39  \n",
      "39       65.0   40  \n",
      "40       78.0   41  \n",
      "41       70.0   42  \n",
      "42       69.0   43  \n",
      "43       72.0   44  \n",
      "44       62.0   45  \n",
      "45       72.0   46  \n",
      "46       97.0   47  \n",
      "47       89.0   48  \n",
      "48        NaN   49  \n",
      "49       93.0   50  \n",
      "Query 5:\n",
      "   Average_Ratings\n",
      "0            8.424\n",
      "Query 6:\n",
      "                                           Movie Name    Votes  \\\n",
      "0                                     The Dark Knight  2722716   \n",
      "1       The Lord of the Rings: The Return of the King  1889542   \n",
      "2                                           Inception  2416686   \n",
      "3   The Lord of the Rings: The Fellowship of the Ring  1918130   \n",
      "4               The Lord of the Rings: The Two Towers  1705415   \n",
      "5                                          The Matrix  1960545   \n",
      "6      Star Wars: Episode V - The Empire Strikes Back  1322946   \n",
      "7                                     Soorarai Pottru   119590   \n",
      "8                                           Star Wars  1395326   \n",
      "9                          Terminator 2: Judgment Day  1124574   \n",
      "10                               Shichinin no samurai   353222   \n",
      "11                                            Seppuku    61170   \n",
      "12                                         Sita Ramam    60242   \n",
      "13                                               LÃ©on  1191005   \n",
      "14                                          Gladiator  1538122   \n",
      "15                            Raiders of the Lost Ark   988527   \n",
      "16                                  Avengers: Endgame  1183065   \n",
      "17                             Avengers: Infinity War  1126258   \n",
      "18                                           Oldeuboi   597289   \n",
      "19                              The Dark Knight Rises  1743965   \n",
      "20                                             Aliens   733301   \n",
      "21                                             Kaithi    36225   \n",
      "22                                             Asuran    31245   \n",
      "23                                  Top Gun: Maverick   593988   \n",
      "24                                               Heat   677854   \n",
      "25                                 North by Northwest   334942   \n",
      "26         Star Wars: Episode VI - Return of the Jedi  1078985   \n",
      "27                                            Kantara    95685   \n",
      "28                                             Dangal   197624   \n",
      "29                                           Ratsasan    47024   \n",
      "30                                   K.G.F: Chapter 2   139806   \n",
      "31                                             Vikram    64001   \n",
      "32                                          Shershaah   124906   \n",
      "33                     Guardians of the Galaxy Vol. 3   164652   \n",
      "34                            Spider-Man: No Way Home   800441   \n",
      "35                                      Jurassic Park  1015358   \n",
      "36                 Indiana Jones and the Last Crusade   772482   \n",
      "37                                               1917   622542   \n",
      "38                                      Batman Begins  1505210   \n",
      "39                                  Kill Bill: Vol. 1  1142104   \n",
      "40                                           Die Hard   902206   \n",
      "41                                     V for Vendetta  1141803   \n",
      "42                                                Ran   129370   \n",
      "43                                 Gangs of Wasseypur    99454   \n",
      "44                                       Vikram Vedha    47775   \n",
      "45                                            YÃ´jinbÃ´   126013   \n",
      "\n",
      "   Gross Collection Popularity Certification   Genre           1          2  \n",
      "0      53,48,58,444       None            UA  Action       Crime      Drama  \n",
      "1      37,78,45,905       None             U  Action   Adventure      Drama  \n",
      "2      29,25,76,195       None            UA  Action   Adventure     Sci-Fi  \n",
      "3      31,55,44,750       None             U  Action   Adventure      Drama  \n",
      "4      34,25,51,365       None            UA  Action   Adventure      Drama  \n",
      "5      17,14,79,930       None             A  Action      Sci-Fi       None  \n",
      "6      29,04,75,067       None            UA  Action   Adventure    Fantasy  \n",
      "7            119590       None             U  Action       Drama       None  \n",
      "8      32,27,40,140       None             U  Action   Adventure    Fantasy  \n",
      "9      20,48,43,350       None             A  Action      Sci-Fi       None  \n",
      "10         2,69,061       None             U  Action       Drama       None  \n",
      "11            61170       None          None  Action       Drama    Mystery  \n",
      "12            60242       None             U  Action       Drama    Mystery  \n",
      "13      1,95,01,238       None             A  Action       Crime      Drama  \n",
      "14     18,77,05,427       None            UA  Action   Adventure      Drama  \n",
      "15     24,81,59,971       None             A  Action   Adventure       None  \n",
      "16     85,83,73,000       None            UA  Action   Adventure      Drama  \n",
      "17     67,88,15,482       None            UA  Action   Adventure     Sci-Fi  \n",
      "18         7,07,481       None             A  Action       Drama    Mystery  \n",
      "19     44,81,39,099       None            UA  Action       Drama   Thriller  \n",
      "20      8,51,60,248       None             U  Action   Adventure     Sci-Fi  \n",
      "21            36225       None            UA  Action   Adventure      Crime  \n",
      "22            31245       None            UA  Action       Drama       None  \n",
      "23     71,87,32,821       None            UA  Action       Drama       None  \n",
      "24      6,74,36,818       None             A  Action       Crime      Drama  \n",
      "25      1,32,75,000       None             U  Action   Adventure    Mystery  \n",
      "26     30,91,25,409       None             U  Action   Adventure    Fantasy  \n",
      "27            95685       None            UA  Action   Adventure      Drama  \n",
      "28      1,23,91,761       None             U  Action   Biography      Drama  \n",
      "29            47024       None            UA  Action       Crime      Drama  \n",
      "30        66,04,562       None            UA  Action       Crime      Drama  \n",
      "31            64001       None            UA  Action       Crime   Thriller  \n",
      "32           124906       None            UA  Action   Biography      Drama  \n",
      "33           164652       None            UA  Action   Adventure     Comedy  \n",
      "34     80,47,47,988       None            UA  Action   Adventure    Fantasy  \n",
      "35     40,24,53,882       None            UA  Action   Adventure     Sci-Fi  \n",
      "36     19,71,71,806       None             U  Action   Adventure       None  \n",
      "37     15,92,27,644       None             R  Action       Drama        War  \n",
      "38     20,68,52,432       None            UA  Action       Crime      Drama  \n",
      "39      7,00,99,045       None             A  Action       Crime      Drama  \n",
      "40      8,30,08,852       None             A  Action    Thriller       None  \n",
      "41      7,05,11,035       None            UA  Action       Drama     Sci-Fi  \n",
      "42        41,35,750       None     Not Rated  Action       Drama        War  \n",
      "43            99454       None             A  Action      Comedy      Crime  \n",
      "44            47775       None            UA  Action       Crime      Drama  \n",
      "45           126013       None             U  Action       Drama   Thriller  \n",
      "Query 7:\n",
      "Empty DataFrame\n",
      "Columns: [Movie Name, Directors, Duration, Year, Ratings, Metascore, Sno]\n",
      "Index: []\n",
      "Query 8:\n",
      "                                           Movie Name   Genre  Ratings\n",
      "0                                     The Dark Knight  Action      9.0\n",
      "1       The Lord of the Rings: The Return of the King  Action      9.0\n",
      "2                                           Inception  Action      8.8\n",
      "3   The Lord of the Rings: The Fellowship of the Ring  Action      8.8\n",
      "4               The Lord of the Rings: The Two Towers  Action      8.8\n",
      "5                                          The Matrix  Action      8.7\n",
      "6      Star Wars: Episode V - The Empire Strikes Back  Action      8.7\n",
      "7                                     Soorarai Pottru  Action      8.7\n",
      "8                                           Star Wars  Action      8.6\n",
      "9                          Terminator 2: Judgment Day  Action      8.6\n",
      "10                               Shichinin no samurai  Action      8.6\n",
      "11                                            Seppuku  Action      8.6\n",
      "12                                         Sita Ramam  Action      8.6\n",
      "13                                               LÃ©on  Action      8.5\n",
      "14                                          Gladiator  Action      8.5\n",
      "15                            Raiders of the Lost Ark  Action      8.4\n",
      "16                                  Avengers: Endgame  Action      8.4\n",
      "17                             Avengers: Infinity War  Action      8.4\n",
      "18                                           Oldeuboi  Action      8.4\n",
      "19                              The Dark Knight Rises  Action      8.4\n",
      "20                                             Aliens  Action      8.4\n",
      "21                                             Kaithi  Action      8.4\n",
      "22                                             Asuran  Action      8.4\n",
      "23                                  Top Gun: Maverick  Action      8.3\n",
      "24                                               Heat  Action      8.3\n",
      "25                                 North by Northwest  Action      8.3\n",
      "26         Star Wars: Episode VI - Return of the Jedi  Action      8.3\n",
      "27                                            Kantara  Action      8.3\n",
      "28                                             Dangal  Action      8.3\n",
      "29                                           Ratsasan  Action      8.3\n",
      "30                                   K.G.F: Chapter 2  Action      8.3\n",
      "31                                             Vikram  Action      8.3\n",
      "32                                          Shershaah  Action      8.3\n",
      "33                     Guardians of the Galaxy Vol. 3  Action      8.2\n",
      "34                            Spider-Man: No Way Home  Action      8.2\n",
      "35                                      Jurassic Park  Action      8.2\n",
      "36                 Indiana Jones and the Last Crusade  Action      8.2\n",
      "37                                               1917  Action      8.2\n",
      "38                                      Batman Begins  Action      8.2\n",
      "39                                  Kill Bill: Vol. 1  Action      8.2\n",
      "40                                           Die Hard  Action      8.2\n",
      "41                                     V for Vendetta  Action      8.2\n",
      "42                                                Ran  Action      8.2\n",
      "43                                 Gangs of Wasseypur  Action      8.2\n",
      "44                                       Vikram Vedha  Action      8.2\n",
      "45                                            YÃ´jinbÃ´  Action      8.2\n",
      "Query 9:\n",
      "       Genre  Count\n",
      "0     Action     46\n",
      "1  Animation      4\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import sqlite3\n",
    "\n",
    "# Load the CSV data into DataFrames\n",
    "movies_data_1 = pd.read_csv('movies_data_1.csv')\n",
    "movies_data_2 = pd.read_csv('movies_data_2.csv')\n",
    "\n",
    "# Create a SQLite in-memory database\n",
    "conn = sqlite3.connect(':memory:')\n",
    "\n",
    "# Store the DataFrames as tables in the database\n",
    "movies_data_1.to_sql('movies_data_1', conn, index=False)\n",
    "movies_data_2.to_sql('movies_data_2', conn, index=False)\n",
    "\n",
    "# Query 1: Select all columns from movies_data_1\n",
    "query1 = '''\n",
    "SELECT * FROM movies_data_1\n",
    "'''\n",
    "result1 = pd.read_sql_query(query1, con=conn)\n",
    "print(\"Query 1:\")\n",
    "print(result1)\n",
    "\n",
    "# Query 2: Select specific columns from movies_data_1 and movies_data_2 using an INNER JOIN\n",
    "query2 = '''\n",
    "SELECT movies_data_1.\"Movie Name\", movies_data_1.Directors, movies_data_1.Ratings, movies_data_2.\"Gross Collection\"\n",
    "FROM movies_data_1\n",
    "INNER JOIN movies_data_2 ON movies_data_1.\"Movie Name\" = movies_data_2.\"Movie Name\"\n",
    "WHERE movies_data_2.Genre LIKE '%Action%'\n",
    "'''\n",
    "result2 = pd.read_sql_query(query2, con=conn)\n",
    "print(\"Query 2:\")\n",
    "print(result2)\n",
    "\n",
    "# Query 3: Select distinct Directors from movies_data_1\n",
    "query3 = '''\n",
    "SELECT DISTINCT Directors FROM movies_data_1\n",
    "'''\n",
    "result3 = pd.read_sql_query(query3, con=conn)\n",
    "print(\"Query 3:\")\n",
    "print(result3)\n",
    "\n",
    "# Query 4: Select movies with Ratings greater than 8 from movies_data_1\n",
    "query4 = '''\n",
    "SELECT * FROM movies_data_1 WHERE Ratings > 8\n",
    "'''\n",
    "result4 = pd.read_sql_query(query4, con=conn)\n",
    "print(\"Query 4:\")\n",
    "print(result4)\n",
    "\n",
    "# Query 5: Select the average Ratings from movies_data_1\n",
    "query5 = '''\n",
    "SELECT AVG(Ratings) AS Average_Ratings FROM movies_data_1\n",
    "'''\n",
    "result5 = pd.read_sql_query(query5, con=conn)\n",
    "print(\"Query 5:\")\n",
    "print(result5)\n",
    "\n",
    "# Query 6: Select movies with a specific Genre from movies_data_2\n",
    "query6 = '''\n",
    "SELECT * FROM movies_data_2 WHERE Genre = 'Action'\n",
    "'''\n",
    "result6 = pd.read_sql_query(query6, con=conn)\n",
    "print(\"Query 6:\")\n",
    "print(result6)\n",
    "\n",
    "# Query 7: Select movies with a specific Director from movies_data_2\n",
    "query7 = '''\n",
    "SELECT * FROM movies_data_1 WHERE Directors = 'Christopher Nolan'\n",
    "'''\n",
    "result7 = pd.read_sql_query(query7, con=conn)\n",
    "print(\"Query 7:\")\n",
    "print(result7)\n",
    "\n",
    "# Query 8: Select movies with a specific Genre and Ratings from movies_data_1 and movies_data_2 using an INNER JOIN\n",
    "query8 = '''\n",
    "SELECT movies_data_1.\"Movie Name\", movies_data_2.Genre, movies_data_1.Ratings\n",
    "FROM movies_data_1\n",
    "INNER JOIN movies_data_2 ON movies_data_1.\"Movie Name\" = movies_data_2.\"Movie Name\"\n",
    "WHERE movies_data_1.Ratings > 8 AND movies_data_2.Genre = 'Action'\n",
    "'''\n",
    "result8 = pd.read_sql_query(query8, con=conn)\n",
    "print(\"Query 8:\")\n",
    "print(result8)\n",
    "\n",
    "# Query 9: Select the count of movies in each Genre from movies_data_2\n",
    "query9 = '''\n",
    "SELECT Genre, COUNT(*) AS Count\n",
    "FROM movies_data_2\n",
    "GROUP BY Genre\n",
    "'''\n",
    "result9 = pd.read_sql_query(query9, con=conn)\n",
    "print(\"Query 9:\")\n",
    "print(result9)\n",
    "\n",
    "# Close the database connection\n",
    "conn.close()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "056eb492",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "First few rows:\n",
      "                                          Movie Name  \\\n",
      "0                Spider-Man: Across the Spider-Verse   \n",
      "1                                    The Dark Knight   \n",
      "2      The Lord of the Rings: The Return of the King   \n",
      "3                                          Inception   \n",
      "4  The Lord of the Rings: The Fellowship of the Ring   \n",
      "\n",
      "                                           Directors Duration  Year  Ratings  \\\n",
      "0  Joaquim Dos Santos, Kemp Powers, Justin K. Tho...  140 min  2023      9.0   \n",
      "1  Christopher Nolan, Christian Bale, Heath Ledge...  152 min  2008      9.0   \n",
      "2  Peter Jackson, Elijah Wood, Viggo Mortensen, I...  201 min  2003      9.0   \n",
      "3  Christopher Nolan, Leonardo DiCaprio, Joseph G...  148 min  2010      8.8   \n",
      "4  Peter Jackson, Elijah Wood, Ian McKellen, Orla...  178 min  2001      8.8   \n",
      "\n",
      "   Metascore  Sno    Votes Gross Collection  Popularity Certification  \\\n",
      "0       86.0    1    96924            96924         NaN             U   \n",
      "1       84.0    2  2722919      534,858,444         NaN            UA   \n",
      "2       94.0    3  1889638      377,845,905         NaN             U   \n",
      "3       74.0    4  2416838      292,576,195         NaN            UA   \n",
      "4       92.0    5  1918224      315,544,750         NaN             U   \n",
      "\n",
      "           0           1           2  \n",
      "0  Animation      Action   Adventure  \n",
      "1     Action       Crime       Drama  \n",
      "2     Action   Adventure       Drama  \n",
      "3     Action   Adventure      Sci-Fi  \n",
      "4     Action   Adventure       Drama  \n",
      "Descriptive statistics:\n",
      "              Year    Ratings  Metascore       Sno         Votes  Popularity\n",
      "count    50.000000  50.000000  39.000000  50.00000  5.000000e+01         0.0\n",
      "mean   2002.780000   8.424000  78.564103  25.50000  7.839162e+05         NaN\n",
      "std      18.896377   0.234355  10.718393  14.57738  7.016393e+05         NaN\n",
      "min    1954.000000   8.200000  58.000000   1.00000  3.124800e+04         NaN\n",
      "25%    1991.500000   8.200000  70.500000  13.25000  1.251868e+05         NaN\n",
      "50%    2005.000000   8.350000  78.000000  25.50000  6.502435e+05         NaN\n",
      "75%    2019.000000   8.600000  86.500000  37.75000  1.172949e+06         NaN\n",
      "max    2023.000000   9.000000  98.000000  50.00000  2.722919e+06         NaN\n",
      "Data types:\n",
      "Movie Name           object\n",
      "Directors            object\n",
      "Duration             object\n",
      "Year                  int64\n",
      "Ratings             float64\n",
      "Metascore           float64\n",
      "Sno                   int64\n",
      "Votes                 int64\n",
      "Gross Collection     object\n",
      "Popularity          float64\n",
      "Certification        object\n",
      "0                    object\n",
      "1                    object\n",
      "2                    object\n",
      "dtype: object\n",
      "Missing values:\n",
      "Movie Name           0\n",
      "Directors            0\n",
      "Duration             0\n",
      "Year                 0\n",
      "Ratings              0\n",
      "Metascore           11\n",
      "Sno                  0\n",
      "Votes                0\n",
      "Gross Collection     0\n",
      "Popularity          50\n",
      "Certification        1\n",
      "0                    0\n",
      "1                    0\n",
      "2                    9\n",
      "dtype: int64\n",
      "Correlations:\n",
      "                Year   Ratings  Metascore       Sno     Votes  Popularity\n",
      "Year        1.000000 -0.061458  -0.392954  0.091165 -0.131682         NaN\n",
      "Ratings    -0.061458  1.000000   0.372202 -0.923547  0.510202         NaN\n",
      "Metascore  -0.392954  0.372202   1.000000 -0.283310 -0.147020         NaN\n",
      "Sno         0.091165 -0.923547  -0.283310  1.000000 -0.497225         NaN\n",
      "Votes      -0.131682  0.510202  -0.147020 -0.497225  1.000000         NaN\n",
      "Popularity       NaN       NaN        NaN       NaN       NaN         NaN\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the CSV files into separate DataFrames\n",
    "movies_data_1 = pd.read_csv('movies_data_1.csv')\n",
    "movies_data_2 = pd.read_csv('movies_data_2.csv')\n",
    "\n",
    "# Merge the DataFrames using the join operation\n",
    "merged_data = movies_data_1.join(movies_data_2.set_index('Movie Name'), on='Movie Name')\n",
    "\n",
    "# Perform EDA on the merged DataFrame\n",
    "# You can explore various aspects of the data such as descriptive statistics, data types, missing values, correlations, etc.\n",
    "# Here are a few examples:\n",
    "\n",
    "# Display the first few rows of the merged DataFrame\n",
    "print(\"First few rows:\")\n",
    "print(merged_data.head())\n",
    "\n",
    "# Get descriptive statistics of numeric columns\n",
    "print(\"Descriptive statistics:\")\n",
    "print(merged_data.describe())\n",
    "\n",
    "# Check data types of columns\n",
    "print(\"Data types:\")\n",
    "print(merged_data.dtypes)\n",
    "\n",
    "# Check for missing values\n",
    "print(\"Missing values:\")\n",
    "print(merged_data.isnull().sum())\n",
    "\n",
    "# Calculate correlations between numeric columns\n",
    "print(\"Correlations:\")\n",
    "print(merged_data.corr())\n",
    "\n",
    "# Perform other EDA tasks such as data visualization, exploring categorical variables, etc.\n",
    "\n",
    "# Write detailed observations for each analysis and insights you gather from the data.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "6aa6fd44",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Vote Prediction MSE: 111607703766.03604\n",
      "Gross Collection Prediction MSE: 2.8331777026036464e+16\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.metrics import mean_squared_error\n",
    "\n",
    "# Read data from CSV files into DataFrames\n",
    "movies_data_1 = pd.read_csv('movies_data_1.csv')\n",
    "movies_data_2 = pd.read_csv('movies_data_2.csv')\n",
    "\n",
    "# Merge the two DataFrames based on a common column (e.g., 'Movie Name')\n",
    "merged_data = pd.merge(movies_data_1, movies_data_2, on='Movie Name', how='inner')\n",
    "\n",
    "# Preprocess the merged data\n",
    "merged_data.fillna(0, inplace=True)  # Replace missing values with 0 (or you can use other strategies)\n",
    "\n",
    "# Select relevant features for vote prediction\n",
    "vote_features = merged_data[['Year', 'Ratings', 'Metascore', 'Votes']]\n",
    "\n",
    "# Split the data into train and test sets for vote prediction\n",
    "X_vote = vote_features.drop('Votes', axis=1)\n",
    "y_vote = vote_features['Votes']\n",
    "X_vote_train, X_vote_test, y_vote_train, y_vote_test = train_test_split(X_vote, y_vote, test_size=0.2, random_state=42)\n",
    "\n",
    "# Train a regression model for vote prediction\n",
    "vote_model = LinearRegression()\n",
    "vote_model.fit(X_vote_train, y_vote_train)\n",
    "\n",
    "# Make predictions for vote using the trained model\n",
    "y_vote_pred = vote_model.predict(X_vote_test)\n",
    "\n",
    "# Calculate the mean squared error for vote prediction\n",
    "vote_mse = mean_squared_error(y_vote_test, y_vote_pred)\n",
    "print(\"Vote Prediction MSE:\", vote_mse)\n",
    "\n",
    "# Select relevant features for gross collection prediction\n",
    "gross_features = merged_data[['Year', 'Ratings', 'Metascore', 'Gross Collection']]\n",
    "\n",
    "# Preprocess the gross collection data\n",
    "gross_features_processed = gross_features.copy()  # Create a copy of the DataFrame\n",
    "gross_features_processed['Gross Collection'] = gross_features_processed['Gross Collection'].str.replace(',', '')  # Remove commas\n",
    "gross_features_processed['Gross Collection'] = pd.to_numeric(gross_features_processed['Gross Collection'], errors='coerce')  # Convert to numeric\n",
    "\n",
    "# Drop rows with missing values in the Gross Collection column\n",
    "gross_features_processed.dropna(subset=['Gross Collection'], inplace=True)\n",
    "\n",
    "# Split the data into train and test sets for gross collection prediction\n",
    "X_gross = gross_features_processed.drop('Gross Collection', axis=1)\n",
    "y_gross = gross_features_processed['Gross Collection']\n",
    "X_gross_train, X_gross_test, y_gross_train, y_gross_test = train_test_split(X_gross, y_gross, test_size=0.2, random_state=42)\n",
    "\n",
    "# Train a regression model for gross collection prediction\n",
    "gross_model = RandomForestRegressor()\n",
    "gross_model.fit(X_gross_train, y_gross_train)\n",
    "\n",
    "# Make predictions for gross collection using the trained model\n",
    "y_gross_pred = gross_model.predict(X_gross_test)\n",
    "\n",
    "# Calculate the mean squared error for gross collection prediction\n",
    "gross_mse = mean_squared_error(y_gross_test, y_gross_pred)\n",
    "print(\"Gross Collection Prediction MSE:\", gross_mse)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "80db09b1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "First few rows:\n",
      "                                      Movie_Name  \\\n",
      "0            Spider-Man: Across the Spider-Verse   \n",
      "1                                The Dark Knight   \n",
      "2  The Lord of the Rings: The Return of the King   \n",
      "\n",
      "                                           Directors Duration  Year  Ratings  \\\n",
      "0  Joaquim Dos Santos, Kemp Powers, Justin K. Tho...  140 min  2023      9.0   \n",
      "1    Christopher Nolan, Christian Bale, Heath Ledger  152 min  2008      9.0   \n",
      "2        Peter Jackson, Elijah Wood, Viggo Mortensen  201 min  2003      9.0   \n",
      "\n",
      "   Metascore  Sno    Votes Gross_Collection Popularity Certification  \\\n",
      "0       86.0    1    95477            95477       None             U   \n",
      "1       84.0    2  2722716     53,48,58,444       None            UA   \n",
      "2       94.0    3  1889542     37,78,45,905       None             U   \n",
      "\n",
      "       Genre    Column1    Column2  \n",
      "0  Animation     Action  Adventure  \n",
      "1     Action      Crime      Drama  \n",
      "2     Action  Adventure      Drama  \n",
      "\n",
      "Descriptive statistics:\n",
      "              Year  Ratings  Metascore  Sno         Votes\n",
      "count     3.000000      3.0   3.000000  3.0  3.000000e+00\n",
      "mean   2011.333333      9.0  88.000000  2.0  1.569245e+06\n",
      "std      10.408330      0.0   5.291503  1.0  1.342587e+06\n",
      "min    2003.000000      9.0  84.000000  1.0  9.547700e+04\n",
      "25%    2005.500000      9.0  85.000000  1.5  9.925095e+05\n",
      "50%    2008.000000      9.0  86.000000  2.0  1.889542e+06\n",
      "75%    2015.500000      9.0  90.000000  2.5  2.306129e+06\n",
      "max    2023.000000      9.0  94.000000  3.0  2.722716e+06\n",
      "\n",
      "Data types:\n",
      "Movie_Name           object\n",
      "Directors            object\n",
      "Duration             object\n",
      "Year                  int64\n",
      "Ratings             float64\n",
      "Metascore           float64\n",
      "Sno                   int64\n",
      "Votes                 int64\n",
      "Gross_Collection     object\n",
      "Popularity           object\n",
      "Certification        object\n",
      "Genre                object\n",
      "Column1              object\n",
      "Column2              object\n",
      "dtype: object\n",
      "\n",
      "Missing values:\n",
      "Movie_Name          0\n",
      "Directors           0\n",
      "Duration            0\n",
      "Year                0\n",
      "Ratings             0\n",
      "Metascore           0\n",
      "Sno                 0\n",
      "Votes               0\n",
      "Gross_Collection    0\n",
      "Popularity          3\n",
      "Certification       0\n",
      "Genre               0\n",
      "Column1             0\n",
      "Column2             0\n",
      "dtype: int64\n",
      "\n",
      "Correlations:\n",
      "               Year  Ratings  Metascore       Sno     Votes\n",
      "Year       1.000000      NaN  -0.544705 -0.960769 -0.848285\n",
      "Ratings         NaN      NaN        NaN       NaN       NaN\n",
      "Metascore -0.544705      NaN   1.000000  0.755929  0.017977\n",
      "Sno       -0.960769      NaN   0.755929  1.000000  0.668138\n",
      "Votes     -0.848285      NaN   0.017977  0.668138  1.000000\n"
     ]
    }
   ],
   "source": [
    "import sqlite3\n",
    "import pandas as pd\n",
    "\n",
    "# Connect to the database\n",
    "conn = sqlite3.connect('movies.db')\n",
    "cursor = conn.cursor()\n",
    "\n",
    "# Create the \"movies\" table\n",
    "create_table_query = '''\n",
    "CREATE TABLE IF NOT EXISTS movies (\n",
    "    Movie_Name TEXT,\n",
    "    Directors TEXT,\n",
    "    Duration TEXT,\n",
    "    Year INTEGER,\n",
    "    Ratings FLOAT,\n",
    "    Metascore FLOAT,\n",
    "    Sno INTEGER,\n",
    "    Votes INTEGER,\n",
    "    Gross_Collection TEXT,\n",
    "    Popularity FLOAT,\n",
    "    Certification TEXT,\n",
    "    Genre TEXT,\n",
    "    Column1 TEXT,\n",
    "    Column2 TEXT\n",
    ")\n",
    "'''\n",
    "cursor.execute(create_table_query)\n",
    "\n",
    "# Insert sample data into the \"movies\" table\n",
    "insert_data_query = '''\n",
    "INSERT INTO movies (Movie_Name, Directors, Duration, Year, Ratings, Metascore, Sno, Votes, Gross_Collection, Popularity, Certification, Genre, Column1, Column2)\n",
    "VALUES\n",
    "    (\"Spider-Man: Across the Spider-Verse\", \"Joaquim Dos Santos, Kemp Powers, Justin K. Thompson\", \"140 min\", 2023, 9.0, 86.0, 1, 95477, \"95477\", NULL, \"U\", \"Animation\", \"Action\", \"Adventure\"),\n",
    "    (\"The Dark Knight\", \"Christopher Nolan, Christian Bale, Heath Ledger\", \"152 min\", 2008, 9.0, 84.0, 2, 2722716, \"53,48,58,444\", NULL, \"UA\", \"Action\", \"Crime\", \"Drama\"),\n",
    "    (\"The Lord of the Rings: The Return of the King\", \"Peter Jackson, Elijah Wood, Viggo Mortensen\", \"201 min\", 2003, 9.0, 94.0, 3, 1889542, \"37,78,45,905\", NULL, \"U\", \"Action\", \"Adventure\", \"Drama\")\n",
    "    -- Insert more rows here\n",
    ";\n",
    "'''\n",
    "cursor.execute(insert_data_query)\n",
    "\n",
    "# Commit the changes and close the connection\n",
    "conn.commit()\n",
    "conn.close()\n",
    "\n",
    "# Read the data from the database into a DataFrame\n",
    "conn = sqlite3.connect('movies.db')\n",
    "query = \"SELECT * FROM movies\"\n",
    "data = pd.read_sql_query(query, conn)\n",
    "conn.close()\n",
    "\n",
    "# Print the first few rows of the DataFrame\n",
    "print(\"First few rows:\")\n",
    "print(data.head())\n",
    "\n",
    "# Print descriptive statistics of the DataFrame\n",
    "print(\"\\nDescriptive statistics:\")\n",
    "print(data.describe())\n",
    "\n",
    "# Print data types of the DataFrame\n",
    "print(\"\\nData types:\")\n",
    "print(data.dtypes)\n",
    "\n",
    "# Print the number of missing values in each column\n",
    "print(\"\\nMissing values:\")\n",
    "print(data.isnull().sum())\n",
    "\n",
    "# Print the correlations between numeric columns\n",
    "print(\"\\nCorrelations:\")\n",
    "print(data.corr())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "87119f64",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Linear Regression Mean Squared Error: 0.0\n",
      "Decision Tree Mean Squared Error: 0.0\n",
      "Random Forest Mean Squared Error: 0.0\n"
     ]
    }
   ],
   "source": [
    "import sqlite3\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.metrics import mean_squared_error\n",
    "\n",
    "# Connect to the SQLite database\n",
    "conn = sqlite3.connect('movies.db')\n",
    "\n",
    "# Read the data from the 'movies' table\n",
    "query = \"SELECT * FROM movies\"\n",
    "data = pd.read_sql_query(query, conn)\n",
    "\n",
    "# Close the database connection\n",
    "conn.close()\n",
    "\n",
    "# Preprocess the 'Duration' column\n",
    "data['Duration'] = data['Duration'].str.replace(' min', '').astype(int)\n",
    "\n",
    "# Select the numeric columns for feature scaling\n",
    "numeric_cols = ['Duration', 'Year']\n",
    "\n",
    "# Split the data into features (X) and target (y)\n",
    "X = data[numeric_cols]\n",
    "y = data['Ratings']\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Perform feature scaling on the numeric columns\n",
    "scaler = StandardScaler()\n",
    "X_train_scaled = scaler.fit_transform(X_train)\n",
    "X_test_scaled = scaler.transform(X_test)\n",
    "\n",
    "# Train the linear regression model\n",
    "linear_model = LinearRegression()\n",
    "linear_model.fit(X_train_scaled, y_train)\n",
    "\n",
    "# Train the decision tree regressor\n",
    "dt_model = DecisionTreeRegressor(random_state=42)\n",
    "dt_model.fit(X_train_scaled, y_train)\n",
    "\n",
    "# Train the random forest regressor\n",
    "rf_model = RandomForestRegressor(random_state=42)\n",
    "rf_model.fit(X_train_scaled, y_train)\n",
    "\n",
    "# Make predictions on the test set using all models\n",
    "linear_pred = linear_model.predict(X_test_scaled)\n",
    "dt_pred = dt_model.predict(X_test_scaled)\n",
    "rf_pred = rf_model.predict(X_test_scaled)\n",
    "\n",
    "# Evaluate the models\n",
    "linear_mse = mean_squared_error(y_test, linear_pred)\n",
    "dt_mse = mean_squared_error(y_test, dt_pred)\n",
    "rf_mse = mean_squared_error(y_test, rf_pred)\n",
    "\n",
    "print(f\"Linear Regression Mean Squared Error: {linear_mse}\")\n",
    "print(f\"Decision Tree Mean Squared Error: {dt_mse}\")\n",
    "print(f\"Random Forest Mean Squared Error: {rf_mse}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b7db5aab",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
